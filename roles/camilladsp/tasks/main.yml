---
# Install required packages
- name: Install required packages
  apt:
    name:
      - unar
      - python3
      - python3-venv
    state: present
  become: yes

# Create installation directory
- name: Create installation directory
  file:
    path: "{{ camilladsp_install_dir }}"
    state: directory
    mode: '0755'
    owner: "{{ camilladsp_user }}"
    group: "{{ camilladsp_group }}"
  become: yes

# Download CamillaDSP setup script
- name: Download CamillaDSP setup script
  get_url:
    url: "https://github.com/HEnquist/camilladsp-setupscripts/releases/download/v{{ camilladsp_version }}/full_install_venv.sh"
    dest: "/tmp/full_install_venv.sh"
    mode: '0755'
    force: yes
  become: yes

# Execute CamillaDSP setup script
- name: Execute CamillaDSP setup script
  shell: >
    cd /tmp &&
    ./full_install_venv.sh "{{ camilladsp_install_dir }}"
  args:
    executable: /bin/bash
  become: yes
  become_user: "{{ camilladsp_user }}"
  register: setup_result
  changed_when: setup_result.rc == 0
  failed_when: setup_result.rc != 0

# Display setup result
- name: Display setup result
  debug:
    var: setup_result.stdout_lines

# Create empty statefile if it doesn't exist
- name: Create empty statefile if it doesn't exist
  file:
    path: "{{ camilladsp_install_dir }}/statefile.yml"
    state: touch
    mode: '0644'
    owner: "{{ camilladsp_user }}"
    group: "{{ camilladsp_group }}"
  become: yes
  changed_when: false

# Create systemd service files
- name: Create CamillaDSP systemd service file
  template:
    src: camilladsp.service.j2
    dest: /etc/systemd/system/camilladsp.service
    owner: root
    group: root
    mode: '0644'
  become: yes
  register: camilladsp_service_file

- name: Create CamillaGUI systemd service file
  template:
    src: camillagui.service.j2
    dest: /etc/systemd/system/camillagui.service
    owner: root
    group: root
    mode: '0644'
  become: yes
  register: camillagui_service_file

# Reload systemd if service files changed
- name: Reload systemd daemon
  systemd:
    daemon_reload: yes
  become: yes
  when: camilladsp_service_file.changed or camillagui_service_file.changed

# Enable and start services
- name: Enable and start CamillaDSP service
  systemd:
    name: camilladsp
    enabled: yes
    state: started
  become: yes

- name: Enable and start CamillaGUI service
  systemd:
    name: camillagui
    enabled: yes
    state: started
  become: yes

# Wait for services to start
- name: Wait for services to start
  pause:
    seconds: 5

# Check service status
- name: Check CamillaDSP service status
  systemd:
    name: camilladsp
  register: camilladsp_status
  become: yes
  changed_when: false

- name: Check CamillaGUI service status
  systemd:
    name: camillagui
  register: camillagui_status
  become: yes
  changed_when: false

# Display service status
- name: Display service status
  debug:
    msg:
      - "CamillaDSP service status: {{ 'Active' if camilladsp_status.status.ActiveState == 'active' else 'Inactive' }}"
      - "CamillaGUI service status: {{ 'Active' if camillagui_status.status.ActiveState == 'active' else 'Inactive' }}"

# Get service logs
- name: Get CamillaDSP service logs
  shell: "journalctl -u camilladsp.service -n 20 --no-pager"
  register: camilladsp_logs
  become: yes
  changed_when: false

- name: Get CamillaGUI service logs
  shell: "journalctl -u camillagui.service -n 20 --no-pager"
  register: camillagui_logs
  become: yes
  changed_when: false

# Display service logs
- name: Display CamillaDSP service logs
  debug:
    var: camilladsp_logs.stdout_lines

- name: Display CamillaGUI service logs
  debug:
    var: camillagui_logs.stdout_lines

# Get IP address for GUI access
- name: Get IP address
  setup:
    filter: ansible_default_ipv4
  register: network_info
  changed_when: false

# Display GUI access information
- name: Display GUI access information
  debug:
    msg:
      - "CamillaDSP and GUI are now running as system services!"
      - "CamillaDSP is running on port 1234 with statefile: {{ camilladsp_install_dir }}/statefile.yml"
      - "Access the GUI at: http://localhost:5005 or http://{{ network_info.ansible_facts.ansible_default_ipv4.address }}:5005"
      - "Please check if the GUI is accessible in your browser."
      - "The services will continue running after this playbook completes."
      - "To manage the services, use: sudo systemctl [start|stop|restart|status] [camilladsp|camillagui]"

# Clean up temporary files
- name: Clean up temporary files
  file:
    path: "{{ camilladsp_install_dir }}/temp"
    state: absent
  become: yes
  changed_when: true
  ignore_errors: yes